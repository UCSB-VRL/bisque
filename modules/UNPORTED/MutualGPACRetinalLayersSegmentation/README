Minimal documentation for MutualGPACRetinalLayersSegmentation.m , MutualLBSRetinalLayersSegmentation.m and GPACDelGobj.m files

MutualGPACRetinalLayersSegmentation.m 
--------------------------------------
--------------------------------------

Algorithm greatly depends on the texture information of the reference image specified. Hence works "correctly" only on a subset of images. Also order of the layers is assumed to BG->ML->ONL->IS/OS->BG

Discrepancy:
*** INL (Snakes Algorithm ) ====  ONL (MutualGPACRetinalLayersSegmentation)

A few of the possible improvements are as comments in the code.

It works on dataset having tag label dataset: GPAC

Data has RGB data- algorithm data on all the three channels - fails to generate a mask image if one of the channel information is missing.

Dataset has sub-group condition: normal.

Reference image: GPAC reference image and corresponding GT mask used, size reduced to 200 * 300.
Input and GT mask are also resized to 200*300.

Algo consists of functions SimByTiles4Mutual() and MutualPrior_GPAC() - considering as a black box.

Used some morphological operation to improve the generated mask image. The boundaries of the image are traced and the output is saved as polygon gobject.

f_pt2mask1() is a function similar to f_pt2mask2 (in the Retina_code folder) Uses a simpler and standard matlab function poly2mask().


MutualLBSRetinalLayersSegmentation.m - Does not work as of 29th April 2009.
-------------------------------------
-------------------------------------

MutualGPACRetinalLayersSegmentation algorithm designed to work with dataset:layer_boundary_segmentation. This dataset has no information in the 'B' channel, and the MutualGPACRetinalLayersSegmentation algo (as in the mex file code) requires all the 3 channel inputs.

Need to look into the code and figue out!
*** \cluster\home\luca\lucamex and \cluster\home\luca\lucamatlab repectively for .cpp and .m.

GPACDelGobj.m
------------
-------------

test function used to delete all the gobject, tags and images generated by GPAC algorithm.




