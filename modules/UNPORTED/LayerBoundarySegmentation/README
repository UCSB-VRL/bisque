Minimal documentation for LayerBoundarySegmentation GPACLayerBoundarySegmentation.m and LBSDelGobj.m

LayerBoundarySegmentation.m
----------------------------
----------------------------

Performs layer boundary segmentation using Active Contours-Snake algorithm, developed by Nhat Vu. Roughly, it first detect the boundaries on the extreme edges of the image, calculates a median in x, sets the initial boundary on the median, and proceeds inwards to do the same for all layers. The median lines (vertical lines) are then deformed using the texture information (learned in the training phase) 

It works on dataset having tag label dataset: layer_boundary_segmentation

Considers data in only R ang G channels - ignores B channel if present

Dataset has sub-group condition: 3d (3-day), 7d, 28d and normal.

Function explns
---------------
get_image_info():  Reads the tag information and determines the condition
search_training_image() : Code determines the sub-type from the tag information and automatically searches for a reference image in the database with the same tag information i.e of the same class.
load_training_data(): loads the training data, updates the num_layers variable. loads the data in the order as saved in the gobject, specific to the algorithm
load_GObj_data(): Commented out, common function used across to load Gobj data, number of layers should be given as input to load only specific layers mentioned in the segm_layers cell array. It loads the layer information in the order as mentioned in the array. Use of of either functions above.
retina_train(): requires a training image of the same size as the input image and training data and creates a training profile. Coord in = [x,y]
retina_segment(): Uses the training profile, and calculates the segmentation layers. Coord out = [y,x]
retina_save_segm_out() : saves the segm data as gobjects
retina_save_segm_mask() : saves the information as mask

GPACLayerBoundarySegmentation.m
--------------------------------
--------------------------------
LayerBoundary Segmentation code which works on a GPAC dataset.

It works on dataset having tag label dataset: GPAC

Data has RGB data- algorithm considers only in only R ang G channels - ignores B channel

Dataset has sub-group condition: normal.

Discrepancy:
*** INL (Snakes Algorithm ) ====  ONL (MutualGPACRetinalLayersSegmentation)

Reference image: GPAC reference image used, should be resized to the same size as input data. (Algorithm restriction). Fails if the same reference image as used for GPAC is considered.

Functions are similar to the LayerBoundarySegmentation code. 

Differences: 

* Hardcoded the path of the training image. It is of same size as input image. GPAC algorithm does not care for the size, hence not changed in the dataset tags.
* Loads the gobject data in the order required for the algorithm - It is specified in the segm_layers cell array in load_GObj_data() function.


LBSDelGobj.m
------------
------------

test function to delete the gobjects and tags and images generated by the algorithm

